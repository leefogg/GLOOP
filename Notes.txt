Vertex Attribute Object contains pointers to Vertex Buffer Objects
To bind an array to a shader
Generate the VAO using GL30.glGenVertexArrays() which returns an ID
Set the context to the new VAO using GL30.glBindVertexArray() using the ID
Then start binding the VBOs..
Create a VBO using GL15.glGenBuffers() which returns an ID
Bind the buffer using GL15.glBindBuffer(GL15.GL_ARRAY_BUFFER, ID)
Store the data into the VBO using GL15.glBufferData()
Then to bind the VBO to the VAO using GL20.glVertexAttribPointer, taking which index in the VAO to store into
Now the data is all set into the VAO
To render using the VAO...
Bind the VAO again
either bind an attribute location to a shader uniform using GL20.glBindAttribLocation or
  get the index of the unifom location using GL20.glGetUniformLocation()
  update its value using GL20.glUniformXX functions
enable each index in the VAO needed using GL20.glEnableVertexAttribArray(index)
